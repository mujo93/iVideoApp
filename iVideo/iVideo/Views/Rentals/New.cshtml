
@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true"
                   data-rule-nonDeliquentCustomer="true"
                   required type="text" value="" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-atLeastOneMovie="true"  type="text" value="" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3- col-sm-3">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>
    <button class="btn btn btn-primary">Submit</button>
</form>

@section scripts{
     @Scripts.Render("/bundles/jqueryval");
    <script>
        $(document).ready(function () {
            var vm = {
                movieIds: []
            };
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({

                minLength: 3,
                highlight: true
            },
                {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select", function (e, customer) {
                    vm.customer = customer
                    vm.customerId = customer.id;
                });

            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            },
                {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on("typeahead:select", function (e, movie) {
                    if (vm.movieIds.length < 3) {
                        $("#movies").append("<li class='list-group-item' id='" + movie.id+"'>" + movie.name + "<span class='close'>&times;</span> "+"</li>");
                        $("#movie").typeahead("val", "");
                        vm.movieIds.push(movie.id);
                    }
                    else {
                        toastr.error("Maximum rental number is 3.");
                    }
                });

            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== null;
            }, "Please select a valid customer.");

            $.validator.addMethod("atLeastOneMovie", function () {
                return vm.movieIds.length > 0 
            }, "Please select a movie.");

            $.validator.addMethod("nonDeliquentCustomer", function () {
                return vm.customer.isDeliquent === false;
            }, "Customer is deliquent on payment.");

            $("#newRental").validate({
                submitHandler: function () {
                $.ajax({
                    url: "/api/NewRentals/CreateNewRentals/",
                    method: "post",
                    data: vm
                })
                    .done(function () {
                        toastr.success("Rentals successfully recorded.")
                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();
                        vm = { movieIds: [] };
                        validator.resetForm();
                })
                    .fail(function () {
                        toastr.error("Something unexpected happened.");
                    });
                    return false;
                }
            });

            $("#movies").on("click", ".close", function () {
                let movieId = $(this).closest('li').attr("id");
                let index = vm.movieIds.indexOf(Number(movieId));
                if (index >= 0) { vm.movieIds.splice(index, 1); }
                $(this).closest('li').remove();

            });

        });
    </script>
    
    }